<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Side_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Retail|LS Hardware Station|How to ...">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../Skins/Favicons/favicon-16x16.png" /><title>How to: Implement a custom device for LS Hardware Station</title>
        <link rel="shortcut icon" href="/Content/Resources/Images/favicon.ico" />
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/LSNav.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/foundation.6.2.3_custom.js" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js" defer="defer">
        </script>
        <script src="../../../Resources/Javascripts/Scroll-Button.js" defer="defer">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-accordion vertical menu off-canvas-list" data-accordion-menu="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 1279px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-dropdown" style="display:none;" id="#centralSmallScreen"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../../../home.html" title="LS Central Help" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                    <div class="central-dropdown" style="display:none;" id="#centralTop"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                    <div class="central-dropdown" style="display:none;"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div data-mc-content-body="True">
                                    <MadCap:conditionalText data-mc-conditions="Default.GoogleAnalytics">
                                        <script>/* <![CDATA[ */
				(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
				(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
				m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
				})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
			
				ga('create', 'UA-58791693-4', 'auto');
			
				var file = document.location.href; 
				file = file.substring(0, (file.indexOf("#") == -1) ? file.length : file.indexOf("#"));
				file = file.substring(0, (file.indexOf("?") == -1) ? file.length : file.indexOf("?"));
				file = file.substring(file.lastIndexOf("/") + 1, file.length);
 
				if (file === 'Search.htm') 
				{
					var newPath = document.location.pathname + document.location.search + document.location.hash;
					newPath = newPath.replace(/#/, '?');
					newPath = newPath.replace(/search\-/, 'q=');
					ga('set', 'page', newPath);
				
					function locationHashChanged()
					{
						newPath = document.location.pathname + document.location.search + document.location.hash;
						newPath = newPath.replace(/#/, '?');
						newPath = newPath.replace(/search\-/, 'q=');
						ga('set', 'page', newPath);
						ga('send', 'pageview');
					}
				
					if(window.HashChangeEvent)
					{
						window.onhashchange = locationHashChanged;
					}
				}
				ga('send', 'pageview');
			/* ]]> */</script>
                                    </MadCap:conditionalText>
                                    <div class="nocontent">
                                        <div class="MCBreadcrumbsBox_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                        </div>
                                    </div>
                                    <p>&#160;</p>
                                    <div role="main" id="mc-main-content">
                                        <h1><a name="aanchor11329"></a>
                                            <MadCap:concept term="Retail" />How to: Implement a Custom Device for LS Hardware Station</h1>
                                        <p>When implementing a customization for a device, it is <b>good practice to give the DLL and the class a different name</b> than the default implementation already has. </p>
                                        <p class="shortcut"><a href="#Error" class="MCXref xref">Error handling</a>
                                        </p>
                                        <p class="shortcut"><a href="#See" class="MCXref xref">See also</a>
                                        </p>
                                        <p>This is so that your customers can use the default functionality for a normal OPOS&#160;device, and then also use your customized implementation for that special device that they also have. </p>
                                        <p>In Step 1 below the  referenced How to ... instruction gives the DLL&#160;a different name and describes how to build it to the correct folder. <b>Note:&#160;</b>Do not skip this step as it is very important to do this properly.</p>
                                        <p><b>Note:</b> The steps below are written for Visual Studio 2019. If you are using another version, it is possible that the operations, dialog windows, or buttons have a different location or name.</p>
                                        <ol>
                                            <li value="1">Create a custom solution for your customization by following the instructions in <a href="How-To-Create-A-Custom-Solution-For-LS-Hardware.htm" class="MCXref xref">How to: Create a Custom Solution for LS Hardware Station</a> The following steps below assume that the steps in that topic have been done.<br /></li>
                                            <li value="2">It is also useful to go through the instructions in <a href="How-To-Debug-Existing-Implementation-For-LS-HWST.htm" class="MCXref xref">How to: Debug Existing Device Implementation Using LS Hardware Station</a>, but not necessary.</li>
                                            <li value="3">Make sure that you are <b>running Visual Studio as an Administrator</b>.</li>
                                            <li value="4">Go to <b>Services</b>, and make sure that the LS&#160;Hardware Station is not running on your computer, stop it if it is already running.</li>
                                            <li value="5">There are two ways to do an implementation: <ol style="list-style-type: lower-alpha;"><li value="1">to use the existing implementation as described in <a href="How-To-Debug-Existing-Implementation-For-LS-HWST.htm" class="MCXref xref">How to: Debug Existing Device Implementation Using LS Hardware Station</a> and only change the code that is not working as needed, or</li><li value="2">implement the device interface from scratch and write all the device functionality yourself. The steps below describe how to start both types of implementation.</li></ol></li>
                                            <li value="6">After following the How to ... instructions in Steps 1 and 2, you should have a solution with two projects, <b>LSOposPrinter </b>and <b>MyPrinterDevice</b>. Go to the <b>MyPrinterDevice</b> solution, and open the <i>MyPrinterDeviceClass.cs</i> file.</li>
                                            <li value="7">Make the MyPrinterDeviceClass inherit from <b>Device</b> and <b>IPrinter</b> (<i>public class MyPrinterDeviceClass : Device, IPrinter</i>). You will see that the environment does not recognize the objects <i>Device</i> or<i> IPrinter</i>. These two objects are in the <a href="../Implementations/Implementing-A-Custom-DLL.htm#LS" target="_blank">LSOposControls.DLL</a> that you will need to add as a reference. <br /><b>Note:</b> Make sure that you add it from the <i>..\Source\LSOposControls</i> folder where the LS&#160;Hardware Station is installed. Your Visual Studio should suggest that you need to add a <i>using LSRetail.NAV.Opos</i> to the using section of the cs file, but if it does not you need to add it manually.</li>
                                            <li value="8">Click the IPrinter term with the mouse, and then select <b>Implement the interface</b> in the options that are made available. This will add all the functions and properties that need to be implemented to the class with a <b>NotImplementedException</b> added to all function bodies. This means that when all the functions are called, an exception is thrown that will tell the caller that the function has not been implemented.<p><b>Note:</b> If none of the standard functionality should be used, then this is the starting point for adding the new customized functionality. Any functions that should not be implemented in the customization should have the<i> NotImplementedException</i> removed. </p><p><b>Note</b>: All functionality that the LS&#160;Hardware Station relies on will need to either be implemented or have the function return a default value. </p><p><img src="../../../Resources/Images/LS Hardware Station/CustomSolution_NotImplementedException_400x417.png" style="width: 400;height: 417;" /></p></li>
                                            <li value="9">If the purpose is to use the standard functionality but change some part of the functionality, then the default implementation can be used and then only specific functions can be changed. Even when the original code is being used it is recommended that the DLL name and class name are changed to represent the customization, so that the user can create two different devices, that is using the standard functionality and the customized functionality. If they both have the same names, there can only be one DLL&#160;available to the user, which is either the standard functionality or the customized one. </li>
                                            <li value="10">Go to the <i>Printer.cs </i>file in the LSOposPrinter project, and copy the entire code from the cs file. Go to the <i>MyPrinterDeviceClass.cs</i> and paste it over the entire code in that file. Then change the following:<ul><li value="1">The namespace <b>has to be reset</b> to be <i>MyPrinterDevice</i></li></ul><ul><li value="1">The class name <b>has to be reset</b> to be <i>MyPrinterDeviceClass</i></li><li value="2">The constructor function name will also have to be changed to be <i>MyPrinterDeviceClass</i></li><li value="3">The <b>GetProperties</b> function is casting the properties it finds to a Printer type, this type cast should be changed to be <i>MyPrinterDeviceClass</i>.</li></ul><p><img src="../../../Resources/Images/LS Hardware Station/CustomSolution_Printing code_700x257.png" style="width: 700;height: 257;" /></p></li>
                                            <li value="11">As you can see in the image above, the <i>OposPrinter_CCO</i>&#160;is in red. This is because a reference to the Printer OPOS&#160;COM object is missing from the project. In order to have access to those objects, the machine that you are working on has to have the <i>Curtis Monroe OPOS&#160;DLLs</i> (which are installed with the LS&#160;Hardware Station).<p>When adding a reference to a COM object through the <b>Add Reference</b> option, you need to select <b>COM</b> on the left of the dialog, Then you can search for <i>OPOS</i> and select the device that you want to work with in your customization. In this instance, it is the <i>OPOS&#160;POSPrinter Control </i>as shown in the image below:</p><p><img src="../../../Resources/Images/LS Hardware Station/CustomSolution_AddCCOReference_700x451.png" style="width: 700;height: 451;" /></p></li>
                                            <li value="12">Any System references that are missing will also need to be added: most likely, the <i>System.Reflection </i>reference will need to be added through the <b>Assemblies</b> option in the <b>Add reference</b> dialog (see above).</li>
                                            <li value="13">After making all these changes, you should be able to build the solution and you should have a <i>MyPrinterDevice.DLL </i>and<i> LSOposPrinter.DLL</i> in the <i>C:\Program Files (x86)\LS Retail\LSHardwareStation\Devices\OPOS </i>folder that has a current timestamp.</li>
                                            <li value="14">Add a small change to the <b>MyPrinterDevice </b>project to show that the customization is working in the LS&#160;Hardware Station: <ol style="list-style-type: lower-roman;"><li value="1">Locate the <i>GetProperties</i> function in the <i>MyPrinterDeviceClass.cs </i>file. </li><li value="2">Add a line at the top of the function where you add a property to your device. See an example in the image below:<p><img src="../../../Resources/Images/LS Hardware Station/CustomSolution_GetProperties_700x296.png" style="width: 700;height: 296;" /></p></li><li value="3">Save the change, and press <b>Start </b>or <b>F5</b> to run the solution using the LS&#160;Hardware Station.</li></ol></li>
                                            <li value="15">Once the LS&#160;Hardware Station has started, go to the Management Portal (localhost:8088 in a browser), and create a new printer device using the customized DLL you just built (see <a href="How-To-Configure-The-Custom-Implementation.htm" class="MCXref xref">How to: Configure the Custom Implementation DLL and Type</a>), and make sure that you set the correct values in the Implementation DLL&#160;and Implementation type (<i>&lt;Namespace&gt;.&lt;Class name&gt;</i>).<p><img src="../../../Resources/Images/LS Hardware Station/CustomSolution_CreateCustomDevice_500x440.png" style="width: 500;height: 440;" class="images" /></p></li>
                                            <li value="16">Select the new device, and click <b>Load</b>.&#160;If the device is loaded successfully, a green banner with the message <i>"Device config updated"</i> will be displayed in the Management Portal. If an error comes up, that usually has to do with the Implementation DLL&#160;and Implementation type values that were entered. </li>
                                            <li value="17">Select the <b>Status</b> tab for the device. At the top of the list you should see the property values that you added in the <b>GetProperties </b>function:<p><img src="../../../Resources/Images/LS Hardware Station/CustomSolution_StatusTab_800x348.png" style="width: 800;height: 348;" /></p></li>
                                        </ol>
                                        <p>It depends of course on the device and the customized functionality needed which functions need to be changed and how. These instructions are intended to help you configure and set up the development environment so that the customization, testing, and debugging can be done easily.</p>
                                        <p><b>Note:</b> Remember to change the <b>Project Configuration</b> to <b>Release</b>, when you are building for a production environment.</p>
                                        <h2><a name="Error"></a>Error handling</h2>
                                        <p>Generally, all functions that can fail return a Boolean value to indicate success or failure of the function call.  If the result is a failure, the function <b>GetLastError</b> should return a description of the error that occurred.</p>
                                        <h2><a name="See"></a>See also</h2>
                                        <p><a href="../Implementations/Implementing-A-Custom-DLL.htm" class="MCXref xref">Implementing a Custom DLL</a>
                                        </p>
                                        <p><a href="How-To-Create-A-Custom-Solution-For-LS-Hardware.htm" class="MCXref xref">How to: Create a Custom Solution for LS Hardware Station</a>
                                        </p>
                                        <p><a href="How-To-Debug-Existing-Implementation-For-LS-HWST.htm" class="MCXref xref">How to: Debug Existing Device Implementation Using LS Hardware Station</a>
                                        </p>
                                        <p><a href="How-To-Configure-The-Custom-Implementation.htm" class="MCXref xref">How to: Configure the Custom Implementation DLL and Type</a>
                                        </p>
                                        <p>&#160;</p>
                                        <p>&#160;</p>
                                    </div>
                                    <div id="footer" class="ls-nav-footer">
                                        <hr width="100%" size="0" align="center" />
                                        <p>© <span class="VariablesCurrentYear">2021</span> LS Retail ehf. All rights reserved.  </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>